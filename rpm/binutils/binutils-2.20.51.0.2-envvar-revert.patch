--- ../binutils-2.20.51.0.2.orig/ld/ldmain.c	2009-10-12 11:28:44.000000000 +0100
+++ ld/ldmain.c	2009-10-12 11:38:36.000000000 +0100
@@ -256,14 +256,6 @@ main (int argc, char **argv)
   command_line.warn_search_mismatch = TRUE;
   command_line.check_section_addresses = -1;
 
-  if (getenv ("LD_SYMBOLIC") != NULL)
-    command_line.symbolic = symbolic;
-  else if (getenv ("LD_SYMBOLIC_FUNCTIONS") != NULL)
-    command_line.symbolic = symbolic_functions;
-
-  if (getenv ("LD_AS_NEEDED") != NULL)
-    as_needed = TRUE;
-
   /* We initialize DEMANGLING based on the environment variable
      COLLECT_NO_DEMANGLE.  The gcc collect2 program will demangle the
      output of the linker, unless COLLECT_NO_DEMANGLE is set in the
--- ../binutils-2.20.51.0.2.orig/ld/ld.texinfo	2009-10-12 11:28:44.000000000 +0100
+++ ld/ld.texinfo	2009-10-12 11:38:36.000000000 +0100
@@ -1140,10 +1140,7 @@ for a library that satisfies a symbol re
 which is undefined at the point that the library was linked, or, if
 the library is not found in the DT_NEEDED lists of other libraries
 linked up to that point, a reference from another dynamic library.
-@option{--no-as-needed} restores the default behaviour.  If the
-environment variable @code{LD_AS_NEEDED} is set, the linker will
-behave as if the @option{--as-needed} option is passed to the linker as
-the first command line option.
+@option{--no-as-needed} restores the default behaviour.
 
 @kindex --add-needed
 @kindex --no-add-needed
@@ -1207,21 +1204,14 @@ When creating a shared library, bind ref
 definition within the shared library, if any.  Normally, it is possible
 for a program linked against a shared library to override the definition
 within the shared library.  This option is only meaningful on ELF
-platforms which support shared libraries.  If @option{-Bsymbolic} is not
-used when linking a shared library, the linker will also turn on this
-option if the environment variable @code{LD_SYMBOLIC} is set.
+platforms which support shared libraries.
 
 @kindex -Bsymbolic-functions
 @item -Bsymbolic-functions
 When creating a shared library, bind references to global function
 symbols to the definition within the shared library, if any.
 This option is only meaningful on ELF platforms which support shared
-libraries.  If @option{-Bsymbolic-functions} is not used when linking a
-shared library, the linker will also turn on this option if the
-environment variable @code{LD_SYMBOLIC_FUNCTIONS} is set.  When
-both environment variables @code{LD_SYMBOLIC} and
-@code{LD_SYMBOLIC_FUNCTIONS} are set, @code{LD_SYMBOLIC} will take
-precedent.
+libraries.
 
 @kindex --dynamic-list=@var{dynamic-list-file}
 @item --dynamic-list=@var{dynamic-list-file}
--- ../binutils-2.20.51.0.2.orig/ld/NEWS	2009-10-12 11:28:44.000000000 +0100
+++ ld/NEWS	2009-10-12 11:38:36.000000000 +0100
@@ -64,11 +64,6 @@ Changes in 2.20:
   For the switch --enable-runtime-pseudo-reloc it uses for 32-bit
   runtime pseudo relocation version one, for 64-bit the version two.
 
-* ELF: Support environment variable LD_AS_NEEDED for --as-needed.
-
-* ELF: Support environment variables, LD_SYMBOLIC for -Bsymbolic and
-  LD_SYMBOLIC_FUNCTIONS for -Bsymbolic-functions.
-
 Changes in 2.19:
 
 * Linker scripts support a new INSERT command that makes it easier to
